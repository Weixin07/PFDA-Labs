dw
###Practice Questions
weeks<-4
hoursPerWeek=40
assign("hourlyRate",50)
rm(hourlyRate)
assign("HOURLYRATE",50)
weeks=as.integer(weeks)
bonuse=as.integer(1000)
tax=as.numeric(0.2)
grossSalary=weeks*hoursPerWeek*HOURLYRATE
netSalary=grossSalary*(1-tax)
grossSalary
NetSalary
###Practice Questions
weeks<-4
hoursPerWeek=40
assign("hourlyRate",50)
rm(hourlyRate)
assign("HOURLYRATE",50)
weeks=as.integer(weeks)
bonuse=as.integer(1000)
tax=as.numeric(0.2)
grossSalary=weeks*hoursPerWeek*HOURLYRATE
netSalary=grossSalary*(1-tax)
grossSalary
netSalary
#2 NOT COMPLETED
a = c(9,8,7,6,5,4,3,2,1)
b = c(1,2,3,4,5,6,7,8,9)
c = array(c(a,b),dim = c(3,3,2))
c
c[[1]][3,3]
c[[3]][3,1]
print(c[1,3,1])
print(c[3,3,1])
#2
a = c(9,8,7,6,5,4,3,2,1)
b = c(1,2,3,4,5,6,7,8,9)
c = array(c(a,b),dim = c(3,3,2))
c
#3
a = c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)
c = array(a,dim = c(3,3,1))
c
#3
a = c(1,2,3,4,5,6,7,8)
b = c(9,10,11,12,13,14,15,16)
c = c(17,18,19,20,21,22,23,24)
d = array(c(a,b,c),dim = c(2,4,3))
d
#Data Frames
#1
a = 0
b = 0
c = data.frame(a,b)
c
n
n
#Matrix
#1
a=matrix(nrow=3,ncol=3)
a
#Data Frames
#1
a = data.frame()
a
#2
a = 10:5
b = -3:2
c = 1:6
d = 7:13
e = data.frame(a,b,c,d)
#2
a = 10:5
b = -3:2
c = 1:6
d = 7:12
e = data.frame(a,b,c,d)
e
#3
a = 10:5
b = -3:2
e = data.frame(First Vector=a,Second Vector=b)
#3
a = 10:5
b = -3:2
e = data.frame(First=a,Second=b)
e
e(name)
names(e)
e[ , 3]
e[ , 2]
e[ , Second]
e[ , "Second"]
#4
a = 10:5
b = -3:2
e = data.frame(a,b)
e[(1,2), ]
e = data.frame(a,b)
e[c(1,2), ]
#5
a = 10:5
b = -3:2
e = data.frame(a,b)
e
c = 1:6
cbind f = cbind(e, c)
j=20
j=30
j=1:10
j=-5:56
j
length(j)
j[1]
j[26]
j[52]
j=c(35,56,78,23,56,90,89)
class(j)
z=runif(3,1,40)
z
names(z)=c("US","China","Malaysia")
z
y=sample(-10,30,5,FALSE)
y
y=sample(-10,30,5,FALSE)
y=sample(-10:30,5,FALSE)
y
#
y=sample(-10:30,5,TRUE)
y
#FACTOR
g=c("m","y","m","y")
class(g)
nlevels(g)
g=factor(c("m","y","m","y"))
class(g)
nlevels(g)
g
#Built-in functions
j=c(4,7,1,34,89,45,23,90,10)
min{j}
max(j)
sum(j)
#Built-in functions
j=c(4,7,1,34,89,45,23,90,10)
min(j)
max(j)
sum(j)
mean(j)
median(j)
sort(j)
sort(j.decreasing = TRUE)
sort(j,decreasing = TRUE)
y=22/7
y
round(y)
z=1.8
round(z)
round(y,digit=2)
round(y,digit=3) #it means round it, but give 2 decimal points
sqrt(25)
rep(10,5)
rep("*",10)
rep("-",10)
x="asdfghjklwertyuiosdfghjkxcvbnm"
nchar(x)
j=c(1,4,6,8)
length(j)
k = 100
length(k)
#ways to display something
#with message
message("Welcome to R Programming Labs")
x=10
y=20
message("The sum of value is ",x+y)
#with print
print("Welcome to R Programming")
#with paste
message="Hello"
paste(message, "Welcome")
#with print
print("Welcome to R Programming")
print("The sum of value is", x+y)
library(crayon)
#To change colour of output
message("Welcome to R Programming Labs")
#To change colour of output
message(yellow("Welcome to R Programming Labs"))
paste(yellow(message, "Welcome"))
print(yellow("Welcome to R Programming"))
message(green$bgyellow("Welcome to"), blue$bold$underline(" R Programming Labs"))
message(green$bgYellow("Welcome to"), blue$bold$underline(" R Programming Labs"))
#title
message(green("PFDA Lab"), magenta$italics$underline(" Progress Report"), red$bgYellow$bold("UC2F/APU2F2202"))
#title
message(green("PFDA Lab"), magenta$italics$underline(" Progress Report"), red$bgYellow$bold(" UC2F/APU2F2202"))
message(green$bgYellow("Welcome to"), blue$bold$underline(" R Programming Labs"))
#title
message(green("PFDA Lab"), magenta$italic$underline(" Progress Report"), red$bgYellow$bold(" UC2F/APU2F2202"))
rep("*",10)
#title
a="PFDA Lab"
b="Progress Report"
c="UC2F/APU2F2202"
d=" "
message(green(a), magenta$italic$underline(b), red$bgYellow$bold(c))
message(green(a), d, magenta$italic$underline(b), d, red$bgYellow$bold(c))
e=message(green(a), d, magenta$italic$underline(b), d, red$bgYellow$bold(c))
nchar(e)
nchar(a)
nchar(a,b)
nchar(a + b)
nchar(a)
nchar(b)
nchar(c)
nchar(d)
e=nchar(a) + nchar(b)
e=nchar(a) + nchar(b) + nchar(c) + nchar(d)
message(green(a), d, magenta$italic$underline(b), d, red$bgYellow$bold(c))
rep("*",e)
#1
f=runif(1:25)
f
#1
test1=runif(5,1,25)
test1
#4
round(test1)
#3
finalExam=sample(1:50,5,TRUE)
finalExam
totalMarks
#5
totalMarks = test1+test2+finalExam
totalMarks
#5
totalMarks = test1 + test2 + finalExam
#1
test1=runif(5,1,25)
test1
#2
test2=runif(5,1,25)
test2
#3
finalExam=sample(1:50,5,TRUE)
finalExam
#4
round(test1)
round(test2)
#5
totalMarks = test1 + test2 + finalExam
totalMarks
l=c(names=c("hana","dul","set")) #quite important function of vector
l
#6
names(totalMarks)=c("Ali","Mohd","Sarah","Tan","Muthu")
totalMarks
#5
totalMarks = roundedTest1 + roundedTest2 + finalExam
#4
roundedTest1=round(test1)
roundedTest2=round(test2)
#5
totalMarks = roundedTest1 + roundedTest2 + finalExam
totalMarks
#6
names(totalMarks)=c("Ali","Mohd","Sarah","Tan","Muthu")
totalMarks
#7
numberOfStudentsInReport=factor(totalMarks)
numberOfStudentsInReport
#7
numberOfStudentsInReport=factor(names(totalMarks))
numberOfStudentsInReport
r = factor(c(1,2,3,4,5,4,3,2,1,0))
r
j=c(1,4,6,8)
length(j) #To find the number of values in a variable (For numbers only)
#7
length(totalMarks)
#7
length(names(totalMarks))
#8
max(totalMarks)
a="PFDA Lab"
b="Progress Report"
c="UC2F/APU2F2202"
d=" "
e=nchar(a) + nchar(b) + nchar(c) + nchar(d)
message(green(a), d, magenta$italic$underline(b), d, red$bgYellow$bold(c))
rep("*",e)
#1
test1=runif(5,1,25)
test1
#2
test2=runif(5,1,25)
test2
#3
finalExam=sample(1:50,5,TRUE)
finalExam
#4
roundedTest1=round(test1)
roundedTest2=round(test2)
#5
totalMarks = roundedTest1 + roundedTest2 + finalExam
totalMarks
#6
names(totalMarks)=c("Ali","Mohd","Sarah","Tan","Muthu")
totalMarks
#7
length(names(totalMarks))
#8
max(totalMarks)
#9
min(totalMarks)
#10
mean(totalMarks)
#5 NOT COMPLETED YET
a = 10:5
b = -3:2
e = data.frame(a,b)
e
c = 1:6
cbind(e, c)
#6
a = 10:5
b = -3:2
e = data.frame(a,b)
e
c = 1:6
d = 7:12
rbind(e, c, d)
#6
a = 10:5
b = -3:2
e = data.frame(a,b)
e
c = c(1,2)
d = c(7,8)
rbind(e, c, d)
#6
a = 10:5
b = -3:2
e = data.frame(a,b)
e
c = c(1,2)
d = c(3,4)
rbind(e, c, d)
#7
a = 10:5
b = -3:2
c = 1:6
d = 7:12
e = data.frame(a,b,c,d)
e
subset(e, select = -c(c,d) )
#List
#1
a = "a"
b = "1"
C = 1:10
#List
#1
a = "a"
b = 1
C = 1:10
d = 11:20
e = data.frame(c,d)
f = list(c(c,d))
g = list
#List
#1
a = "a"
b = 1
C = 1:10
d = 11:20
e = data.frame(c,d)
f = list(c(c,d))
g = list(c(a,b,c,d,e,f))
g
f
f = list(c(c(4,5,7),c(2,3,4)))
f
#List
#1
a = "a"
b = 1
C = 1:10
d = 11:20
e = data.frame(c,d)
#List
#1
a = "a"
b = 1
c = 10:5
d = -3:2
e = data.frame(a,b)
e = data.frame(c,d)
f = list(c(c(4,5,7),c(2,3,4)))
g = list(c(a,b,c,d,e,f))
g
#List
#1
a = "a"
b = 1
c = c(10:5)
d = c(-3:2)
e = data.frame(c,d)
f = list(c(c(4,5,7),c(2,3,4)))
g = list(c(a,b,c,d,e,f))
g
#2
a = 1:5
b = c(1,2,3,4,5,6,7,8,9)
b1 = matrix(a,nrow=3,ncol=3)
#2
a = 1:5
b = c(1,2,3,4,5,6,7,8,9)
b1 = matrix(b,nrow=3,ncol=3)
c = list(c(c(4,5,7),c(2,3,4)))
d = list(c(a,b1,c))
d
data[[1]][1,2]
data[[1]][1]
d[[1]][1,2]
d[[1]][1]
d[[1]][1]
d[[1]][2]
#2
a = 1:5
b = c(1,2,3,4,5,6,7,8,9)
b1 = matrix(b,nrow=3,ncol=3)
c = list(c(c(4,5,7),c(2,3,4)))
d = list(c(a="First List",b1="Second List",c="Third List"))
d
d = list(c("First List"=a,"Second List"=b1,"Third List"=c))
d
d[[1]][1]
d[[1]][2]
#4
x = as.integer(readline(prompt = "Enter an integer:"))
factorialOfInteger <- function(integer){
integer <- x
i=integer
while(i<=0){
factorialt=i*i
print(factorial)
i=i-1
}
sprintf("%s! = %s", integer, factorial)
}
factorialOfInteger()
#4 Answer from chat
factorial <- function(){
num = as.integer(readline("Enter an Integer:"))
init = 1
vec = c(1:num)
for (i in vec){
init = init *1
}
print(init)
}
factorial()
calFactorial = function() {
value = as.integer(readline("Enter an integer: "))
fac = 1
temp = value
while(temp > 0) {
fac = fac * temp
temp = temp - 1
}
print(paste(value,"! =",fac))
}
calFactorial()
plot(x=dataOfStudent$School_Name,y=dataOfStudent$Math_Final_Grade,type="p")
#attach(dataOfStudents)
#plot(School_Name, Math_Final_Grade, main = "School vs Grade", xlab = "School_Name", ylab = "Math_Final_Grade")
#abline(lm(Math_Final_Grade ~ School_Name), col = "blue", lwd = 2)
dataOfStudent = read.csv("D:\\APU Stuff\\Bachelor of Computer Science (Intelligent Systems) [APD2F2202CS(IS)]\\Semester 1\\Programming for Data Analysis [CT127-3-2-PFDA]\\Assignment\\student.csv" ,header=TRUE)
dataOfStudent
View(dataOfStudent)
names(dataOfStudent)=c("Index","School_Name","Sex","Age","Home_Area","Family_Size","Parent's_Maritial_Status","Mother's_Education_Level","Father's_Education_Level","Mother's_Job","Father's_Job","Reason_Of_School_Chosen","Guardian","Travelling_Time_to_School","Weekly_Study_Time","Amount_of_Fails_in_Class","Extra_Educational_Support","Family_Educational_Support","Extra_Paid_Classes","Participation_in_Extra_Activities","Attendance_in_Nursery_School","Intention_to_Further_Higher_Education","Internet_Access_at_Home","Romantic_Relationship","Quality_of_Family_Relationship","Free_Time_After_School","Goes_Out_with_Friends","Workday_Alcohol_Consumption","Weekend_Alcohol_Consumption","Current_Health_Status","Number_of_Absences","Math_First_Period_Grade","Math_Second_Period_Grade","Math_Final_Grade")
View(dataOfStudent)
plot(x=dataOfStudent$School_Name,y=dataOfStudent$Math_Final_Grade,type="p")
library(dplyr)
mutate(dataOfStudent, Total=Math_First_Period_Grade+Math_Second_Period_Grade+Math_Final_Grade)
dataOfStudent
View(dataOfStudent)
mutate(dataOfStudent, Total=Math_First_Period_Grade+Math_Second_Period_Grade+Math_Final_Grade)
View(dataOfStudent)
